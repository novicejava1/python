from django.shortcuts import get_object_or_404, render

from django.http import HttpResponse, HttpResponseRedirect
from django.urls import reverse
from .models import Question, Choice



#from django.template import loader

#def index(request):
#	return HttpResponse("Hello Everyone. This is simple poll application")

#def index(request):
#	latest_question_list = Question.objects.order_by('-pub_date')[:3]
#	output = ', '.join([q.question_text for q in latest_question_list])
#	return HttpResponse(output)

#def index(request):
#	latest_question_list = Question.objects.order_by('-pub_date')[:5]
#	template = loader.get_template('polls/index.html')
#	context = {'latest_question_list':latest_question_list,}
#	return HttpResponse(template.render(context, request))

def index(request):
	latest_question_list = Question.objects.order_by('-pub_date')[:5]
	context = {'latest_question_list':latest_question_list}
	return render(request, 'polls/index.html', context)

#def detail(request, question_id):
#	return HttpResponse("You are looking at Question %s" % question_id)

#def detail(request, question_id):
#	try:
#		question = Question.objects.get(pk=question_id)
#	except Question.DoesNotExist:
#		raise Http404("Question does not exist")
#	context = {'question':question}
#	return render(request, 'polls/detail.html', context)

def detail(request, question_id):
	question = get_object_or_404(Question, pk=question_id)
	context = {'question':question}
	return render(request, 'polls/detail.html', context)

#def result(request, question_id):
#	return HttpResponse("You are looking at Response for Question %s" % question_id)

def result(request, question_id):
	question = get_object_or_404(Question, pk=question_id)
	context = {'question':question}
	return render(request, 'polls/result.html', context)


#def vote(request, question_id):
#	return HttpResponse("You are voting for Question %s" % question_id)

def vote(request, question_id):
	question = get_object_or_404(Question, pk=question_id)
	try:
		selected_choice = question.choice_set.get(pk=request.POST['choice'])
	except (KeyError, Choice.DoesNotExist):
		context = {'question':question, 'error_message': "You didnt selecte the choice"}
		return render(request, 'polls/detail.html', context)
		
	else:
		selected_choice.votes += 1
		selected_choice.save()
		return HttpResponseRedirect(reverse('polls:result', args=(question.id,)))


# Create your views here.
