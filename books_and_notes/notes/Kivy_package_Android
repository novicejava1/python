Purpose - To package Kivy Application for Android devices


Kivy Application can be packaged using two different methods

python-for-android project
buildozer - It sets up all the pre-requisities required for python-for-android and builds the apk that can be automatically pushed to the Android device


Setting up the Buildozer tool

Step1: Clone the buildozer git repository

This will download the repository locally

[admin@feddesk buildozer]$ git clone https://github.com/kivy/buildozer.git
Cloning into 'buildozer'...
remote: Enumerating objects: 22, done.
remote: Counting objects: 100% (22/22), done.
remote: Compressing objects: 100% (17/17), done.
remote: Total 3782 (delta 5), reused 11 (delta 3), pack-reused 3760
Receiving objects: 100% (3782/3782), 1.27 MiB | 214.00 KiB/s, done.
Resolving deltas: 100% (2351/2351), done.
[admin@feddesk buildozer]$ 

[admin@feddesk develop]$ cd buildozer/
[admin@feddesk buildozer]$ ls -ltr
total 144
-rw-rw-r-- 1 admin admin   8017 May 30 17:32 README.md
-rw-rw-r-- 1 admin admin     93 May 30 17:32 MANIFEST.in
-rw-rw-r-- 1 admin admin   1081 May 30 17:32 LICENSE
-rw-rw-r-- 1 admin admin   2149 May 30 17:32 Dockerfile
-rw-rw-r-- 1 admin admin 105372 May 30 17:32 CHANGELOG.md
drwxrwxr-x 6 admin admin   4096 May 30 17:32 buildozer
drwxrwxr-x 3 admin admin   4096 May 30 17:32 docs
-rw-rw-r-- 1 admin admin    921 May 30 17:32 tox.ini
drwxrwxr-x 4 admin admin   4096 May 30 17:32 tests
-rw-rw-r-- 1 admin admin   2551 May 30 17:32 setup.py


Step2: Install the buildozer onto the system

[admin@feddesk buildozer]$ sudo python setup.py install
[sudo] password for admin: 
running install
running bdist_egg
running egg_info
creating buildozer.egg-info
writing buildozer.egg-info/PKG-INFO
...

Installed /usr/local/lib/python3.7/site-packages/zipp-3.1.0-py3.7.egg
Searching for pexpect==4.7.0
Best match: pexpect 4.7.0
Adding pexpect 4.7.0 to easy-install.pth file

Using /usr/lib/python3.7/site-packages
Searching for six==1.12.0
Best match: six 1.12.0
Adding six 1.12.0 to easy-install.pth file

Using /usr/lib/python3.7/site-packages
Finished processing dependencies for buildozer==1.1.1.dev0

Step3: Naviage to project directory and initialize

This will create a build spec file which is customizable

[admin@feddesk kivy]$ cd brick/
[admin@feddesk brick]$ ls -ltr
total 12
-rw-rw-r-- 1 admin admin  898 May 16 02:15 pong.kv
-rwxr-xr-x 1 admin admin 1905 May 22 09:25 main.py

[admin@feddesk brick]$ buildozer init
File buildozer.spec created, ready to customize!
[admin@feddesk brick]$ ls -ltr
total 24
-rw-rw-r-- 1 admin admin   531 May 15 08:26 pong.kv_backup_05152020
-rw-rw-r-- 1 admin admin   898 May 16 02:15 pong.kv
-rwxr-xr-x 1 admin admin  1905 May 22 09:25 main.py
-rw-rw-r-- 1 admin admin 10489 May 30 17:37 buildozer.spec

Step4: Plugin android device and run the application

[admin@feddesk brick]$ buildozer android debug deploy run 

Error:
# Search for Cython (cython)
# Cython (cython) not found, please install it.

[admin@feddesk brick]$ sudo dnf install cython
[admin@feddesk brick]$ sudo dnf install java-1.8.0-openjdk
[admin@feddesk brick]$ sudo dnf install java-1.8.0-openjdk-devel

<pre>  STDOUT:
/home/admin/stack/develop/kivy/brick/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/libffi/armeabi-v7a__ndk_target_21/libffi/autogen.sh: line 2: exec: autoreconf: not found


  STDERR:
</pre>

[admin@feddesk brick]$ sudo dnf install dh-autoreconf
[admin@feddesk brick]$ sudo dnf install zlib-devel

    from _ctypes import Union, Structure, Array
ModuleNotFoundError: No module named '_ctypes'


[admin@feddesk brick]$ sudo dnf install libffi-devel

[admin@feddesk brick]$ buildozer android debug deploy run 


WARNING: pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.

Collecting Cython
  WARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/cython/
  WARNING: Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/cython/
  WARNING: Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/cython/
  WARNING: Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/cython/
  WARNING: Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/cython/
  Could not fetch URL https://pypi.org/simple/cython/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/cython/ (Caused by SSLError("Can't connect to HTTPS URL because the SSL module is not available.")) - skipping
  ERROR: Could not find a version that satisfies the requirement Cython (from versions: none)
ERROR: No matching distribution found for Cython


[admin@feddesk brick]$ sudo dnf install openssl-devel

[admin@feddesk brick]$ pip install pyopenssl --user


pip install --trusted-host pypi.python.org pytest-xdist
pip install --trusted-host pypi.python.org --upgrade pip

[INFO]:    # Android package renamed to myapp__armeabi-v7a-debug-0.1-.apk
[DEBUG]:   -> running cp /home/admin/stack/develop/kivy/brick/.buildozer/android/platform/build-armeabi-v7a/dists/myapp__armeabi-v7a/build/outputs/apk/debug/myapp__armeabi-v7a-debug.apk myapp__armeabi-v7a-debug-0.1-.apk
WARNING: Received a --sdk argument, but this argument is deprecated and does nothing.
No setup.py/pyproject.toml used, copying full private data into .apk.
Applying Java source code patches...
Applying patch: src/patches/SDLActivity.java.patch
# Android packaging done!
# APK myapp-0.1-armeabi-v7a-debug.apk available in the bin directory
# Run '/home/admin/.buildozer/android/platform/android-sdk/platform-tools/adb devices'
# Cwd None
* daemon not running; starting now at tcp:5037
* daemon started successfully
List of devices attached

# Application pushed.
# Application started.


Enable USB debugging in Android device and make sure adb devices list the Android devies as below

[admin@feddesk brick]$ /home/admin/.buildozer/android/platform/android-sdk/platform-tools/adb devices
List of devices attached
5780e62d	device

Enable Install Application via USB in USB debugging setting

# Android packaging done!
# APK myapp-0.1-armeabi-v7a-debug.apk available in the bin directory
# Run '/home/admin/.buildozer/android/platform/android-sdk/platform-tools/adb devices'
# Cwd None
List of devices attached
5780e62d	device

# Deploy on 5780e62d
# Run '/home/admin/.buildozer/android/platform/android-sdk/platform-tools/adb install -r "/home/admin/stack/develop/kivy/brick/bin/myapp-0.1-armeabi-v7a-debug.apk"'
# Cwd /home/admin/.buildozer/android/platform
Performing Push Install
/home/admin/stack/develop/kivy/brick/bin/myapp-0.1-armeabi-v7a-debug.apk: 1 file pushed, 0 skipped. 0.8 MB/s (28395173 bytes in 33.751s)
	pkg: /data/local/tmp/myapp-0.1-armeabi-v7a-debug.apk
Success
# Application pushed.
# Run on 5780e62d
# Run '/home/admin/.buildozer/android/platform/android-sdk/platform-tools/adb shell am start -n org.test.myapp/org.kivy.android.PythonActivity -a org.kivy.android.PythonActivity'
# Cwd /home/admin/.buildozer/android/platform
Starting: Intent { act=org.kivy.android.PythonActivity cmp=org.test.myapp/org.kivy.android.PythonActivity }
# Application started.




